class node {
    int data;
    node next;
    node(int data) {
        this.data = data;
        this.next = null;
    }
}
class linkedlist {
    node head;
    public void add(int data) {
        node newnode = new node(data);
        if (head == null) {
            head = newnode;
        } else {
            node current = head;
            while (current.next != null) {
                current = current.next;
            }
            current.next = newnode;
        }
    }
    public void traverse() {
        node current = head;
        while (current != null) {
            System.out.print(current.data + " -> ");
            current = current.next;
        }
        System.out.println("null");
    }
    public void remove(int data) {
        if (head == null) {
            System.out.println("List is empty.");
            return;
        }
        if (head.data == data) {
            head = head.next;
            return;
        }
        node current = head;
        while (current.next != null && current.next.data != data) {
            current = current.next;
        }
        if (current.next == null) {
            System.out.println("Value " + data + " not found in the list.");
        } else {
            current.next = current.next.next;
        }
    }
}
public class Main {
    public static void main(String[] args) {
        linkedlist list = new linkedlist();

        list.add(10);
        list.add(20);
        list.add(30);
        list.add(40);

        System.out.println("Singly linked list contents:");
        list.traverse();

        list.remove(30);
        System.out.println("After removing 30:");
        list.traverse();
    }
}
